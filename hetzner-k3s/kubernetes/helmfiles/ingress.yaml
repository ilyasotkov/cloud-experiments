helmDefaults:
  wait: true
  force: true
  recreatePods: false
  tillerless: true
  tillerNamespace: kube-system

releases:

- name: nginx-ingress
  installed: true
  namespace: kube-system
  labels:
    app: nginx-ingress
  chart: stable/nginx-ingress
  version: 1.12.1
  values:
  - rbac:
      create: true
    controller:
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 5
        targetCPUUtilizationPercentage: 75
        targetMemoryUtilizationPercentage: 75
      stats:
        enabled: true
      metrics:
        enabled: true
      podAnnotations:
        fluentbit.io/parser: k8s-nginx-ingress
      config:
        server-tokens: "false"
      resources:
        requests:
          cpu: 64m
          memory: 128Mi
        limits:
          cpu: 100m
          memory: 256Mi
      publishService:
        enabled: true

- name: external-dns
  installed: true
  namespace: kube-system
  labels:
    app: external-dns
  chart: stable/external-dns
  version: 2.4.2
  values:
  - rbac:
      create: true
    interval: 1m
    policy: upsert-only
    sources:
    - ingress
    extraArgs:
      log-format: json
    provider: cloudflare
    cloudflare:
      email: {{ requiredEnv "CLOUDFLARE_EMAIL" }}
      apiKey: {{ requiredEnv "CLOUDFLARE_TOKEN" }}
      proxied: false
    domainFilters:
    - {{ .Values.applicationDomainZone }}

- name: cloudflare-api-key
  installed: true
  namespace: cert-manager
  labels:
    app: cloudflare-api-key
  chart: incubator/raw
  values:
  - resources:
    - apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-apikey
      type: Opaque
      stringData:
        apikey: {{ requiredEnv "CLOUDFLARE_TOKEN" }}

- name: cert-manager
  installed: true
  namespace: cert-manager
  hooks:
  - events: ["presync"]
    command: kubectl
    args:
    - apply
    - --validate=true
    - --filename=https://raw.githubusercontent.com/jetstack/cert-manager/release-0.9/deploy/manifests/00-crds.yaml
  - events: ["presync"]
    command: "kubectl"
    args: ["label", "namespace", "cert-manager", "certmanager.k8s.io/disable-validation=true", "--overwrite"]
  labels:
    app: cert-manager
  chart: jetstack/cert-manager
  version: v0.9.0
  values:
  - ingressShim:
      defaultIssuerName: letsencrypt-staging
      defaultIssuerKind: ClusterIssuer
      defaultACMEChallengeType: dns01
      defaultACMEDNS01ChallengeProvider: cloudflare

- name: cert-manager-issuers
  installed: true
  namespace: cert-manager
  labels:
    app: cert-manager-issuers
  chart: incubator/raw
  values:
  - resources:
    - apiVersion: certmanager.k8s.io/v1alpha1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-staging
      spec:
        acme:
          email: {{ requiredEnv "CLOUDFLARE_EMAIL" }}
          server: https://acme-staging-v02.api.letsencrypt.org/directory
          privateKeySecretRef:
            name: letsencrypt-staging-private-key
          solvers:
          - selector:
              matchLabels:
                use-http01-solver: "true"
            http01:
              ingress:
                class: nginx
          - dns01:
              cloudflare:
                email: {{ requiredEnv "CLOUDFLARE_EMAIL" }}
                apiKeySecretRef:
                  name: cloudflare-apikey
                  key: apikey
