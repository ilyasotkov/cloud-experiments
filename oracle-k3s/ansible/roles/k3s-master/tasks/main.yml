- name: Download k3s binary x64
  get_url:
    url: https://github.com/rancher/k3s/releases/download/{{ k3s_version }}/k3s
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0700

- name: Copy k3s service file
  register: k3s_service
  template:
    src: k3s-master.service.j2
    dest: "{{ systemd_dir }}/k3s-master.service"
    owner: root
    group: root
    mode: 0644

- name: Enable and check k3s service
  systemd:
    name: k3s-master
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: Wait for node-token
  wait_for:
    path: /var/lib/rancher/k3s/server/node-token

- name: Register node-token file access mode
  stat:
    path: /var/lib/rancher/k3s/server
  register: p

- name: Change file access node-token
  file:
    path: /var/lib/rancher/k3s/server
    mode: "g+rx,o+rx"

- name: Read node-token from master
  slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: node_token

- name: Store Master node-token
  set_fact:
   token: "{{ node_token.content | b64decode | regex_replace('\n', '') }}"

- name: Restore node-token file access
  file:
    path: /var/lib/rancher/k3s/server
    mode: "{{ p.stat.mode }}"

- name: Create directory .kube
  file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"

- name: Copy config file to user home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: yes
    owner: "{{ ansible_user }}"

- name: Create kubectl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/kubectl
    state: link

- name: Create crictl symlink
  file:
    src: /usr/local/bin/k3s
    dest: /usr/local/bin/crictl
    state: link

- name: Fetch kubeconfig
  fetch:
    src: /home/{{ ansible_user }}/.kube/config
    dest: "{{ fetch_kubeconfig_path }}"
    flat: yes

- name: Update kubernetes endpoint in local kubeconfig
  delegate_to: localhost
  connection: local
  replace:
    path: "{{ fetch_kubeconfig_path }}"
    regexp: 'https://127.0.0.1:6443'
    replace: "https://{{ master_public_ip_address }}:6443"

- name: Allow communication to Kubernetes master
  ufw:
    rule: allow
    from_ip: "{{ kube_api_allowed_sources }}"
    to_ip: any
    from_port: ""
    to_port: 6443
    protocol: any
    log: false
  tags:
    - ufw
