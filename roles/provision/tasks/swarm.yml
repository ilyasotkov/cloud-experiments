---
# - name: Forcefully leave the swarm.
  # shell: docker swarm leave -f
  # ignore_errors: true

- name: Get information about the local Docker Engine.
  shell: docker info
  register: local_docker_info
  no_log: True

- name: As a swarm leader, init a swarm using a correct IP address.
  shell: "docker swarm init --advertise-addr '{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}'"
  ignore_errors: true
  when:
    - "node_swarm_role == 'leader_manager'"
    - "'Swarm: inactive' in local_docker_info.stdout"

- name: As a manager, generate and save manager join-token via the leader node.
  delegate_to: leader_manager
  shell: docker swarm join-token manager
  register: manager_join_token
  run_once: true
  when:
    - "node_swarm_role == 'manager'"
    - "'Swarm: inactive' in local_docker_info.stdout"

- name: As a worker, generate and save worker join-token via the leader node.
  delegate_to: leader_manager
  shell: docker swarm join-token worker
  register: worker_join_token
  run_once: true
  when:
    - "node_swarm_role == 'worker'"
    - "'Swarm: inactive' in local_docker_info.stdout"

- name: Join the swarm as a manager node.
  shell: "{{ manager_join_token.stdout_lines[-1].lstrip() }}"
  when:
    - "node_swarm_role == 'manager'"
    - "'Swarm: inactive' in local_docker_info.stdout"

- name: Join the swarm as a worker node.
  shell: "{{ worker_join_token.stdout_lines[-1].lstrip() }}"
  when:
    - "node_swarm_role == 'worker'"
    - "'Swarm: inactive' in local_docker_info.stdout"
